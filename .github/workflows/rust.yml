name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    # Don't run this job if the push event actor is "actions-user"
    if: github.actor != 'actions-user'

    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
      - name: Lint with clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
      - name: Build (std)
        run: cargo build --verbose
      - name: Build (no_std)
        run: cargo build --no-default-features --verbose
      - name: Run tests (std)
        run: cargo test --verbose
      - name: Run tests (no_std)
        run: cargo test --no-default-features --verbose

  mutants:
    name: Mutation Testing (Informational)
    runs-on: ubuntu-latest
    # Don't run if the push is from actions-user
    if: github.actor != 'actions-user'
    # Continue workflow even if this job fails
    continue-on-error: true
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install cargo-mutants
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-mutants
      
      # Mutation testing is informational - we aim for <70% miss rate
      # but don't block on it due to procedural macro complexity
      - name: Run mutation tests
        run: |
          cargo mutants --in-place -vV || true
          echo "::notice::Mutation testing is informational. See artifacts for detailed results."
        
      - name: Generate mutation summary
        if: always()
        run: |
          if [ -f mutants.out/caught.txt ] && [ -f mutants.out/missed.txt ]; then
            caught=$(wc -l < mutants.out/caught.txt || echo 0)
            missed=$(wc -l < mutants.out/missed.txt || echo 0)
            total=$((caught + missed))
            if [ $total -gt 0 ]; then
              miss_rate=$((missed * 100 / total))
              echo "## Mutation Testing Summary" >> $GITHUB_STEP_SUMMARY
              echo "- Total mutants: $total" >> $GITHUB_STEP_SUMMARY
              echo "- Caught: $caught" >> $GITHUB_STEP_SUMMARY
              echo "- Missed: $missed" >> $GITHUB_STEP_SUMMARY
              echo "- Miss rate: $miss_rate%" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              if [ $miss_rate -gt 70 ]; then
                echo "⚠️ **Warning**: Miss rate is above 70% threshold" >> $GITHUB_STEP_SUMMARY
              else
                echo "✅ Miss rate is within acceptable range (<70%)" >> $GITHUB_STEP_SUMMARY
              fi
            fi
          fi
        
      - name: Upload mutation results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mutation-test-results
          path: mutants.out
